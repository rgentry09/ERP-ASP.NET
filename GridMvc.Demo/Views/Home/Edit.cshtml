@using GridMvc.Demo.Models
@using System.Net;
@model Order

@{
    ViewBag.Title = "Edit Order";
     var error = TempData["error"];
     string returnUrl = (string)ViewData["returnUrl"];
     string gridState = (string)ViewData["gridState"];
     var requestCulture = Context.Features.Get<IRequestCultureFeature>();
}

<h1>@ViewBag.Title</h1>

@{
    if (error != null)
    {
        <p id="error" style="color:red;">@error.ToString()</p>
    }
    else
    {
        <p id="error" style="color:red;"></p>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.OrderID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextBoxFor(m => m.OrderID, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextBoxFor(m => m.Customer.CompanyName, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextBoxFor(m => m.OrderDate, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RequiredDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextBoxFor(m => m.RequiredDate, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RequiredDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShippedDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextBoxFor(m => m.ShippedDate, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ShippedDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShipName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextBoxFor(m => m.ShipName, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ShipName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShipAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextBoxFor(m => m.ShipAddress, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ShipAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShipCity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextBoxFor(m => m.ShipCity, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ShipCity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShipPostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextBoxFor(m => m.ShipPostalCode, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ShipPostalCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShipRegion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextBoxFor(m => m.ShipRegion, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ShipRegion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShipCountry, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextBoxFor(m => m.ShipCountry, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ShipCountry, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Freight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextBoxFor(m => m.Freight, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Freight, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-5">
            @Html.HiddenFor(r => r.CustomerID)
            @Html.HiddenFor(r => r.EmployeeID)
            @Html.HiddenFor(r => r.ShipVia)
            @Html.Hidden("returnUrl", returnUrl)
            <input type="submit" value="Save" class="btn btn-default btn-md" />
            <a href="@WebUtility.UrlDecode(returnUrl)?gridState=@gridState" class="btn btn-default btn-md">Back</a>
        </div>
    </div>
</div>
}
