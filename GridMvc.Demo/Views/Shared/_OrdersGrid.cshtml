@using GridMvc
@using GridMvc.Demo.Models
@using GridShared
@using GridShared.Sorting
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.ViewEngines
@model SGrid<Order>

@inject ICompositeViewEngine viewEngine

@{
    Action<IGridColumnCollection<Order>> columns = c =>
    {
/* Adding not mapped column, that renders body, using inline Razor html helper */
        c.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(30)
            .Css("hidden-xs") //hide on phones
            .RenderValueAs(o => $"<b><a class='modal_link' href='/Home/Edit/{o.OrderID}'>Edit</a></b>");

/* Adding "OrderID" column: */

        c.Add(o => o.OrderID)
            .Titled("Number")
            .SetWidth(100);

/* Adding "OrderDate" column: */
        c.Add(o => o.OrderDate, "OrderCustomDate")
            .Titled("Date")
            .SortInitialDirection(GridSortDirection.Descending)
            .Format("{0:yyyy-MM-dd}")
            .SetWidth(110);

/* Adding "CompanyName" column: */
        c.Add(o => o.Customer.CompanyName)
            .Titled("Company")
            .SetWidth(250)
            .ThenSortByDescending(o => o.OrderID)
            .SetFilterWidgetType("CustomCompanyNameFilterWidget");

/* Adding "Vip customer" column: */
        c.Add(o => o.Customer.IsVip)
            .Titled("Is Vip")
            .SetWidth(70)
            .Css("hidden-xs") //hide on phones
            .RenderValueAs(o => o.Customer.IsVip ? "Yes" : "No");
    };
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var locale = requestCulture.RequestCulture.UICulture.TwoLetterISOLanguageName;
}

@Html.Grid(Model, viewEngine).Named("ordersGrid").Columns(columns).SetRowCssClasses(item => item.Customer.IsVip ? "success" : string.Empty).WithPaging(10).SetLanguage(locale).Sortable().Filterable().WithMultipleFilters()

