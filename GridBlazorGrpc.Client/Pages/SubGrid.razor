@page "/subgrid"
@using GridBlazorGrpc.Client.ColumnCollections
@using GridBlazorGrpc.Shared.Models
@using Microsoft.Extensions.Primitives
@using System
@using System.Globalization
@using System.Threading.Tasks
@inject IGridClientService gridClientService

<h1>Grid with subgrids</h1>

<p>
    This page contains a grid with subgrids enabled. When an order is seleced a subgrid shows the order lines
</p>

<p>
    This component demonstrates a GridBlazor client-side grid using gRPC to communicate with the back-end. For more information, please see: <a href="https://github.com/gustavnavar/Grid.Blazor">https://github.com/gustavnavar/Grid.Blazor</a>
</p>

@if (_task.IsCompleted)
{
    <div class="row">
        <div class="col-md-12">
            <GridComponent T="Order" Grid="@_grid"></GridComponent>
        </div>
    </div>
}
else
{
    <p><em>Loading...</em></p>
}

@code
{
    private CGrid<Order> _grid;
    private Task _task;

    protected override async Task OnParametersSetAsync()
    {
        var locale = CultureInfo.CurrentCulture;

        Func<object[], Task<ICGrid>> subGrids = async keys =>
        {
            int orderId;
            int.TryParse(keys[0].ToString(), out orderId);
            var subGridQuery = new QueryDictionary<string>();
            var subGridClient = new GridClient<OrderDetail>(q => gridClientService.GetOrderDetailsGrid(q, orderId), subGridQuery, false,
                "orderDetailsGrid" + keys[0].ToString(), ColumnCollections.OrderDetailColumns, locale)
                    .Sortable()
                    .Filterable()
                    .SetStriped(true)
                    .WithMultipleFilters()
                    .WithGridItemsCount();

            await subGridClient.UpdateGrid();
            return subGridClient.Grid;
        };

        var query = new QueryDictionary<string>();
        
        var client = new GridClient<Order>(gridClientService.GetOrdersGridWithSubgrids, query, false, "ordersGrid", 
            ColumnCollections.OrderColumnsWithSubgrids, locale)
            .Sortable()
            .Filterable()
            .SetStriped(true)
            .WithMultipleFilters()
            .WithGridItemsCount()
            .SubGrid(subGrids, ("OrderID","OrderID"));

        _grid = client.Grid;
        // Set new items to grid
        _task = client.UpdateGrid();
        await _task;
    }
}
