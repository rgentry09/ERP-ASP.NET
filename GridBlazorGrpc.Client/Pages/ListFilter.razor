@page "/listfilter"
@using GridBlazorGrpc.Client.ColumnCollections
@using GridBlazorGrpc.Shared.Models
@using Microsoft.Extensions.Primitives
@using System.Globalization
@using System.Threading.Tasks
@inject IGridClientService gridClientService

<h1>Grid Sample</h1>

<p>
    This page contains a grid using list filters
</p>

<p>
    This component demonstrates a GridBlazor client-side grid using gRPC to communicate with the back-end. For more information, please see: <a href="https://github.com/gustavnavar/Grid.Blazor">https://github.com/gustavnavar/Grid.Blazor</a>
</p>

@if (_task1.IsCompleted && _task2.IsCompleted && _task3.IsCompleted && _task4.IsCompleted)
{
    <div class="row">
        <div class="col-md-12">
            <GridComponent T="Order" Grid="@_grid"></GridComponent>
        </div>
    </div>
}
else
{
    <p><em>Loading...</em></p>
}

@code
{
    private CGrid<Order> _grid;
    private Task<IEnumerable<SelectItem>> _task1;
    private Task<IEnumerable<SelectItem>> _task2;
    private Task<IEnumerable<SelectItem>> _task3;
    private Task _task4;
    private IEnumerable<SelectItem> _customers;
    private IEnumerable<SelectItem> _contacts;
    private IEnumerable<SelectItem> _shippers;

    protected override async Task OnParametersSetAsync()
    {
        var locale = CultureInfo.CurrentCulture;
        var query = new QueryDictionary<string>();

        _task1 = gridClientService.GetAllCustomers2();
        _customers = await _task1;
        _task2 = gridClientService.GetAllContacts();
        _contacts = await _task2;
        _task3 = gridClientService.GetAllShippers();
        _shippers = await _task3;;
        Action<IGridColumnCollection<Order>> columns = c => ColumnCollections.OrderColumnsListFilter(c, _customers, _contacts, _shippers);

        var client = new GridClient<Order>(gridClientService.OrderColumnsListFilter, query, false, "ordersGrid", columns, locale)
            .Sortable()
            .Filterable()
            .SetStriped(true)
            .WithMultipleFilters()
            .WithGridItemsCount();

        _grid = client.Grid;
        // Set new items to grid
        _task4 = client.UpdateGrid();
        await _task4;
    }
}
