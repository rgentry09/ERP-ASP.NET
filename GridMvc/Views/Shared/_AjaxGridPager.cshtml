@using GridMvc
@using GridMvc.Pagination
@model GridPager
@if (Model == null || Model.PageCount <= 1)
{
    return;
}
<nav class="grid-pager" data-currentpage="@Model.CurrentPage">
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <li>
                <a href="#" class="grid-page-link" data-page="@(Model.CurrentPage - 1)">«</a>
            </li>
        }

        @if (Model.StartDisplayedPage > 1)
        {
            <li>
                <a href="#" class="grid-page-link" data-page="1">1</a>
            </li>
            if (Model.StartDisplayedPage > 2)
            {
                <li><a href="#" class="grid-page-link" data-page="@(Model.StartDisplayedPage - 1)">...</a></li>
            }
        }
        @for (int i = Model.StartDisplayedPage; i <= Model.EndDisplayedPage; i++)
        {
            if (i == Model.CurrentPage)
            {
                <li class="active"><span>@i</span></li>
            }
            else
            {
                <li><a href="#" class="grid-page-link" data-page="@i">@i</a></li>
            }
        }
        @if (Model.EndDisplayedPage < Model.PageCount)
        {
            if (Model.EndDisplayedPage < Model.PageCount - 1)
            {
                <li><a href="#" class="grid-page-link" data-page="@(Model.EndDisplayedPage + 1)">...</a></li>
            }
            <li><a href="#" class="grid-page-link" data-page="@Model.PageCount">@Model.PageCount</a></li>
        }
        @if (Model.CurrentPage < Model.PageCount)
        {
            <li><a href="#" class="grid-page-link" data-page="@(Model.CurrentPage + 1)">»</a></li>
        }
    </ul>
</nav>
