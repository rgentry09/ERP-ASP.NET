@using GridBlazor.Resources
@using System.Reflection

@typeparam T
@inherits GridDeleteComponentBase<T>

<h1>@Strings.Delete</h1>

<div class="form-horizontal">
    @foreach (var column in GridComponent.Grid.Columns)
    {
        var names = column.FieldName.Split('.');
        PropertyInfo pi = null;
        var type = Item.GetType();
        object value = Item;
        for (int i = 0; i < names.Length; i++)
        {
            pi = type.GetProperty(names[i]);
            bool isNullable = pi.PropertyType.GetTypeInfo().IsGenericType &&
                pi.PropertyType.GetGenericTypeDefinition() == typeof(Nullable<>);
            type = isNullable ? Nullable.GetUnderlyingType(pi.PropertyType) : pi.PropertyType;

            if (value != null)
            {
                value = pi.GetValue(value, null);
            }          
        }
        <div class="form-group" style="@(column.CrudHidden?"display:none;":"")">
            <label for="@column.FieldName" class="control-label col-md-2">@column.Title</label>
            <div class="@(type == typeof(bool)?"col-md-1":"col-md-5")">
                @if (type == typeof(bool))
                {
                    <input id="@column.FieldName" type="checkbox" class="form-control" disabled="disabled" readonly="readonly" checked="@value" value="@column.GetFormatedValue(value)" />
                }
                else
                {
                    <input id="@column.FieldName" class="form-control" readonly="readonly" value="@column.GetFormatedValue(value)" />
                }
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-5">
            <button type="submit" class="btn btn-primary btn-md" @onclick="DeleteItem">@Strings.Delete</button>
            <button class="btn btn-primary btn-md" @onclick="BackButtonClicked">@Strings.Back</button>
        </div>
    </div>
</div>
