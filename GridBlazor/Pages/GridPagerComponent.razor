@using GridShared.Pagination
@using GridBlazor.Resources
@typeparam T

<div class="grid-pager-sizer">
    @if (GridComponent.Grid.Pager != null && GridComponent.Grid.Pager.PageCount > 1)
    {
        <nav class="grid-pager">
            <ul class="pagination">
                @if (GridComponent.Grid.Pager.CurrentPage > 1)
                {
                    <li class="page-item">
                        <button type="button" class="page-link" @onclick="() => PagerButtonClicked(GridComponent.Grid.Pager.CurrentPage - 1)">«</button>
                    </li>
                }
                @if (GridComponent.Grid.Pager.StartDisplayedPage > 1)
                {
                    <li class="page-item">
                        <button type="button" class="page-link" @onclick="() => PagerButtonClicked(1)">1</button>
                    </li>
                    @if (GridComponent.Grid.Pager.StartDisplayedPage > 2)
                    {
                        <li class="page-item">
                            <button type="button" class="page-link" @onclick="() => PagerButtonClicked(GridComponent.Grid.Pager.StartDisplayedPage - 1)">...</button>
                        </li>
                    }
                }
                @for (int i = GridComponent.Grid.Pager.StartDisplayedPage; i <= GridComponent.Grid.Pager.EndDisplayedPage; i++)
                {
                    if (i == GridComponent.Grid.Pager.CurrentPage)
                    {
                        <li class="page-item active">
                            <button type="button" class="page-link">@i <span class="sr-only">(current)</span></button>
                        </li>
                    }
                    else
                    {
                        int j = i;
                        <li class="page-item">
                            <button type="button" class="page-link" @onclick="async () => await PagerButtonClicked(j)">@j</button>
                        </li>
                    }
                }
                @if (GridComponent.Grid.Pager.EndDisplayedPage < GridComponent.Grid.Pager.PageCount)
                {
                    if (GridComponent.Grid.Pager.EndDisplayedPage < GridComponent.Grid.Pager.PageCount - 1)
                    {
                        <li class="page-item">
                            <button type="button" class="page-link" @onclick="async () => await PagerButtonClicked(GridComponent.Grid.Pager.EndDisplayedPage + 1)">...</button>
                        </li>
                    }
                    <li class="page-item">
                        <button type="button" class="page-link" @onclick="async () => await PagerButtonClicked(GridComponent.Grid.Pager.PageCount)">@GridComponent.Grid.Pager.PageCount</button>
                    </li>
                }
                @if (GridComponent.Grid.Pager.CurrentPage < GridComponent.Grid.Pager.PageCount)
                {
                    <li class="page-item">
                        <button type="button" class="page-link" @onclick="async () => await PagerButtonClicked(GridComponent.Grid.Pager.CurrentPage + 1)">»</button>
                    </li>
                }
            </ul>
        </nav>

        <div class="grid-goto-page form-group">
            <label class="control-label"><b>@Strings.Goto</b></label>
            <div>
                <input class="form-control grid-goto-page-input" @bind="_currentPage" @onkeyup="GoToKeyup" @onblur="GoToBlur" @onclick:stopPropagation />
            </div>
        </div>
    }

    @if (GridComponent.Grid.PagingType == PagingType.Pagination && GridComponent.Grid.Pager.ChangePageSize)
    {
        <div class="grid-change-page-size form-group" data-change-page-size-url="@GridComponent.ChangePageSizeUrl">
            <label class="control-label"><b>@Strings.Show</b></label>
            <div>
                <input @ref="GridComponent.PageSizeInput" class="form-control grid-change-page-size-input" @bind="GridComponent.PageSize" @onkeyup="GridComponent.InputPageSizeKeyup" @onblur="GridComponent.InputPageSizeBlur" @onclick:stopPropagation />
            </div>
            <label class="control-label"><b>@Strings.Items</b></label>
        </div>
    }
</div>
