@using GridBlazor.Resources

@typeparam T
@inherits NumberFilterComponentBase<T>

@if (Visible)
{
    <div class="dropdown dropdown-menu grid-dropdown opened" style="display:block;">
        <div class="grid-dropdown-arrow"></div>
        <div class="grid-dropdown-inner">
            <div class="grid-popup-widget">
                @for (int i = 0; i < _filters.Count(); i++)
                {
                    int j = i;
                    if (j == 1)
                    {
                        <div class="form-group row">
                            <div class="col-md-4 col-md-offset-4 offset-md-4">
                                <select class="grid-filter-cond form-control" @bind="_condition" @onclick:stopPropagation @onkeyup:stopPropagation>
                                    <option value="1">@Strings.And</option>
                                    <option value="2">@Strings.Or</option>
                                </select>
                            </div>
                        </div>
                    }
                    else if (j > 1)
                    {
                        <div class="form-group row">
                            <div class="col-md-4 col-md-offset-4 offset-md-4">
                                <select class="grid-filter-cond form-control" disabled="disabled" value="@_condition" @onclick:stopPropagation @onkeyup:stopPropagation>
                                    <option value="1">@Strings.And</option>
                                    <option value="2">@Strings.Or</option>
                                </select>
                            </div>
                        </div>
                    }
                    <div class="form-group row">
                        <div class="col-md-6">
                            @if (j == 0)
                            {
                                <label class="control-label"><b>@Strings.FilterTypeLabel:</b></label>
                            }
                            <div>
                                <select class="grid-filter-type form-control" @bind="_filters[j].Type" @onclick:stopPropagation @onkeyup:stopPropagation>
                                    <option value="1">@Strings.Equal</option>
                                    <option value="5">@Strings.GreaterThan</option>
                                    <option value="6">@Strings.LessThan</option>
                                    <option value="7">@Strings.GreaterThanOrEquals</option>
                                    <option value="8">@Strings.LessThanOrEquals</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @if (j == 0)
                            {
                                <label class="control-label"><b>@Strings.FilterValueLabel:</b></label>
                            }
                            <div>
                                <input type="text" class="grid-filter-input form-control" @bind="_filters[j].Value" @onclick:stopPropagation @onkeyup:stopPropagation/>
                            </div>
                        </div>
                    </div>
                }
                <div class="grid-filter-buttons" style="float:right;">
                    <button type="button" class="btn btn-primary" @onclick="AddColumnFilterValue" @onclick:stopPropagation @onkeyup:stopPropagation><b>+</b></button>
                    @if (_filters.Length > 1)
                    {
                        <button type="button" class="btn btn-primary" style="margin-left:10px;" @onclick="RemoveColumnFilterValue" @onclick:stopPropagation @onkeyup:stopPropagation><b>-</b></button>
                    }
                </div>
                <div class="grid-filter-buttons" style="margin-top:10px;">
                    <button type="button" class="btn btn-primary" @onclick="ApplyButtonClicked" @onkeyup:stopPropagation>
                        @Strings.ApplyFilterButtonText
                    </button>
                </div>
            </div>
            <div class="grid-popup-additional">
                @if (_clearVisible)
                {
                    <ul class="menu-list">
                        <li>
                            <a class="grid-filter-clear" href="javascript:void(0);" @onclick="ClearButtonClicked" @onkeyup:stopPropagation>
                                @Strings.ClearFilterLabel
                            </a>
                        </li>
                    </ul>
                }
            </div>
        </div>
    </div>
}
